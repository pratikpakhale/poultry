name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      - name: Build Docker images
        run: |
          docker-compose build

      - name: Test Docker images
        run: |
          docker-compose up -d
          sleep 10  # Wait for services to start
          curl --fail http://localhost:3000 || exit 1  # Basic health check
          curl --fail http://localhost:3000/api/test || exit 1  # API check
          docker-compose down

  deploy:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          # Copy project files to EC2
          rsync -avz -e "ssh -i ~/.ssh/ec2_key.pem" ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/poultry/

          # Write .env file and deploy on EC2
          ssh -i ~/.ssh/ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            mkdir -p /home/${{ secrets.EC2_USER }}/poultry/server
            echo "${{ secrets.DOCKER_COMPOSE_ENV }}" > /home/${{ secrets.EC2_USER }}/poultry/server/.env
            cd /home/${{ secrets.EC2_USER }}/poultry
            docker-compose down
            docker-compose up --build -d
          EOF
