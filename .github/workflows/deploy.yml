name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          rsync -avz -e "ssh -i ~/.ssh/ec2_key.pem" ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/poultry/
          ssh -i ~/.ssh/ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            sudo apt update
            sudo apt install -y nginx
            sudo bash -c 'cat > /etc/nginx/sites-available/default <<NGINX
            server {
                listen 80;
                server_name ${{ secrets.EC2_HOST }};
                location / {
                    proxy_pass http://localhost:3000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection "upgrade";
                    proxy_set_header Host \$host;
                    proxy_cache_bypass \$http_upgrade;
                }
            }
            NGINX'
            sudo nginx -t
            sudo systemctl restart nginx
            mkdir -p /home/${{ secrets.EC2_USER }}/poultry/server
            echo "${{ secrets.DOCKER_COMPOSE_ENV }}" > /home/${{ secrets.EC2_USER }}/poultry/server/.env
            cd /home/${{ secrets.EC2_USER }}/poultry
            docker-compose down
            docker-compose up --build -d
            docker ps -a  # Verify containers are running
          EOF
